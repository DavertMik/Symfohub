<?php

/**
 * BaseDocumentation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $repository_id
 * @property clob $text
 * @property clob $html
 * @property string $text_hash
 * @property Repository $Repository
 * 
 * @method integer       getRepositoryId()  Returns the current record's "repository_id" value
 * @method clob          getText()          Returns the current record's "text" value
 * @method clob          getHtml()          Returns the current record's "html" value
 * @method string        getTextHash()      Returns the current record's "text_hash" value
 * @method Repository    getRepository()    Returns the current record's "Repository" value
 * @method Documentation setRepositoryId()  Sets the current record's "repository_id" value
 * @method Documentation setText()          Sets the current record's "text" value
 * @method Documentation setHtml()          Sets the current record's "html" value
 * @method Documentation setTextHash()      Sets the current record's "text_hash" value
 * @method Documentation setRepository()    Sets the current record's "Repository" value
 * 
 * @package    symfohub
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDocumentation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('documentation');
        $this->hasColumn('repository_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('text', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('html', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('text_hash', 'string', 32, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 32,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Repository', array(
             'local' => 'repository_id',
             'foreign' => 'id'));
    }
}
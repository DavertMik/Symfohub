<?php

/**
 * BasedoGitHubUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $username
 * @property string $email
 * @property boolean $is_admin
 * @property doGitHubRemember $RememberKeys
 * @property Doctrine_Collection $Repositories
 * @property Doctrine_Collection $Post
 * @property Doctrine_Collection $Assertion
 * 
 * @method string              getUsername()     Returns the current record's "username" value
 * @method string              getEmail()        Returns the current record's "email" value
 * @method boolean             getIsAdmin()      Returns the current record's "is_admin" value
 * @method doGitHubRemember    getRememberKeys() Returns the current record's "RememberKeys" value
 * @method Doctrine_Collection getRepositories() Returns the current record's "Repositories" collection
 * @method Doctrine_Collection getPost()         Returns the current record's "Post" collection
 * @method Doctrine_Collection getAssertion()    Returns the current record's "Assertion" collection
 * @method doGitHubUser        setUsername()     Sets the current record's "username" value
 * @method doGitHubUser        setEmail()        Sets the current record's "email" value
 * @method doGitHubUser        setIsAdmin()      Sets the current record's "is_admin" value
 * @method doGitHubUser        setRememberKeys() Sets the current record's "RememberKeys" value
 * @method doGitHubUser        setRepositories() Sets the current record's "Repositories" collection
 * @method doGitHubUser        setPost()         Sets the current record's "Post" collection
 * @method doGitHubUser        setAssertion()    Sets the current record's "Assertion" collection
 * 
 * @package    symfohub
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasedoGitHubUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('do_git_hub_user');
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_admin', 'boolean', null, array(
             'type' => 'boolean',
             ));


        $this->index('unique_username', array(
             'fields' => 
             array(
              0 => 'username',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('doGitHubRemember as RememberKeys', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Repository as Repositories', array(
             'local' => 'username',
             'foreign' => 'owner'));

        $this->hasMany('Post', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Assertion', array(
             'local' => 'id',
             'foreign' => 'user_id'));
    }
}
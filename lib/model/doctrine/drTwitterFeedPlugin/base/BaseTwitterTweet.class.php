<?php

/**
 * BaseTwitterTweet
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $keyword
 * @property string $screen_name
 * @property string $avatar
 * @property string $user_id
 * @property string $native_id
 * @property string $parsed_text
 * @property datetime $created_at
 * 
 * @method string       getKeyword()     Returns the current record's "keyword" value
 * @method string       getScreenName()  Returns the current record's "screen_name" value
 * @method string       getAvatar()      Returns the current record's "avatar" value
 * @method string       getUserId()      Returns the current record's "user_id" value
 * @method string       getNativeId()    Returns the current record's "native_id" value
 * @method string       getParsedText()  Returns the current record's "parsed_text" value
 * @method datetime     getCreatedAt()   Returns the current record's "created_at" value
 * @method TwitterTweet setKeyword()     Sets the current record's "keyword" value
 * @method TwitterTweet setScreenName()  Sets the current record's "screen_name" value
 * @method TwitterTweet setAvatar()      Sets the current record's "avatar" value
 * @method TwitterTweet setUserId()      Sets the current record's "user_id" value
 * @method TwitterTweet setNativeId()    Sets the current record's "native_id" value
 * @method TwitterTweet setParsedText()  Sets the current record's "parsed_text" value
 * @method TwitterTweet setCreatedAt()   Sets the current record's "created_at" value
 * 
 * @package    symfohub
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTwitterTweet extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('twitter_tweets');
        $this->hasColumn('keyword', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('screen_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('avatar', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('user_id', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('native_id', 'string', 255, array(
             'type' => 'string',
             'primary' => true,
             'length' => 255,
             ));
        $this->hasColumn('parsed_text', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('created_at', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => true,
             ));


        $this->index('keyword', array(
             'fields' => 
             array(
              0 => 'keyword',
             ),
             ));
        $this->index('identification', array(
             'fields' => 
             array(
              0 => 'screen_name',
              1 => 'user_id',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'fetched_at',
             ),
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}
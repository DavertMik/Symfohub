<?php

/**
 * Repository
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    symfohub
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Repository extends BaseRepository
{
	public function setObjectTag($tag) {
		$this->addTag(explode(' ', $tag));
	}
  
  public function calculateWorks() {
    $status = Doctrine::getTable('Assertion')->createQuery()->
      select('works, COUNT(*) AS num')->
      where('repository_id = ?',$this->id)->
      groupBy('works')->
      orderBy('num ASC')->
      fetchOne(array(), Doctrine_Core::HYDRATE_ARRAY);

    $this->total = Doctrine::getTable('Assertion')->createQuery()->
      where('repository_id = ?',$this->id)->
      count();

    if (!count($status)) return;
    if (!$this->total) return;
    if ($this->total < 3) {
      $status = Doctrine::getTable('Assertion')->createQuery()->
        select('works')->
        where('repository_id = ?',$this->id)->
        andWhere('user_id = ?',$this->Owner->id)->
        fetchOne(array(), Doctrine_Core::HYDRATE_ARRAY);
      if (!$status) return;
      $this->works = $status['works'];
      $this->percent = null ;
      $this->save();
      return;
    }

    $this->works = $status['works']; 
    $this->percent = ($status['num'] / $this->total)*100;
    $this->save();
  }

	public function getObjectTag() {
			return implode(' ', $this->getSavedTags());
	}

  public function setUrl($url) {
    preg_match('~https://github.com/(.*?)/(.*)~', $url, $matches);
    if (!$matches[0]) return;
    $this->owner = $matches[1];
    $r = explode('/',$matches[2]);
    $this->name = is_array($r) ? reset($r) : $r;
  }

  public function preSave($event) {
     Doctrine::getTable('Repository')
    ->getTemplate('Doctrine_Template_Searchable')
    ->getPlugin()
    ->setOption('analyzer', new CamelAnalyzer());

    $this->inner_rate = $this->watchers + $this->forks*3 + $this->total*5 + $this->rate*10;
  }

  public function guessType() {
    if (preg_match('~Plugin$~', $this->name)) {
      $this->type = 'plugin';
    }
    if (preg_match('~Bundle$~', $this->name)) {
      $this->type = 'bundle';
    }
  }

  public function preInsert($event) {
      $this->Owner = doGitHubUserTable::getInstance()->findOrCreateByUsername($this->owner);
  }



  public function getUrl() {
    return 'https://github.com/'.$this->owner.'/'.$this->name;
  }

  public function getAuthor() {
      return $this->owner;
  }
  
  public function getAvatar() {
      return '';
  }
  
  public function getGit() {
      return 'git://github.com/'.$this->owner.'/'.$this->name.'.git';
  }

	public function __toString() {
	    return $this->name;
	}
  
}